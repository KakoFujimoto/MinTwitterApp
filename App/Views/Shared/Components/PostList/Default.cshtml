@model IEnumerable<MinTwitterApp.DTO.PostPageDTO>
@{
    var currentUserId = ViewBag.CurrentUserId as string;
    var loginUserId = ViewBag.LoginUserId as string;
}

@if (!Model.Any())
{
    <p>投稿はまだありません。</p>
}
else
{
    <div class="list-group">
        @foreach (var post in Model)
        {
            if (post.ReplyToPostId != null)
            {
                continue;
            }
            var postId = post.Id;
            <div class="card" id="post-@postId">
                <div id="display-@postId">
                    <a asp-controller="UserProfile" asp-action="Index" asp-route-id="@post.UserId">
                        <h6>@(post.UserName ?? "未設定")</h6>
                    </a>
                    <h6>@post.CreatedAt.ToString("yyyy/MM/dd HH:mm")</h6>

                    @* リポスト元の表示 *@
                    @if (post.RepostSourceId != null)
                    {
                        <div class="alert alert-secondary mb-2">
                            <a asp-controller="UserProfile" asp-action="Index" asp-route-id="@post.SourceUserId">
                                <small class="text-muted">リポスト元: @post.SourceUserName</small>
                            </a>
                            <p>
                                @if (post.SourceImagePath != null)
                                {
                                    <img src="@post.SourceImagePath" class="post-image" />
                                }
                            </p>
                            <p class="mb-0">@post.SourceContent</p>
                        </div>
                    }

                    @* 本文と画像 *@
                    @if (!string.IsNullOrEmpty(post.ImagePath))
                    {
                        <a href="@post.ImagePath" target="_blank">
                            <img src="@post.ImagePath" class="post-image" />
                        </a>
                    }
                    <p class="content">@post.Content</p>

                    @* リポストでも通常投稿でも返信は表示する *@
                    @if (post.Replies != null && post.Replies.Any())
                    {
                        <div class="mt-2 ps-3 border-start border-2">
                            @foreach (var reply in post.Replies)
                            {
                                <div class="border rounded p-2 mb-1 bg-light">
                                    <h6>@reply.UserName</h6>
                                    <small class="text-muted">@reply.CreatedAt.ToString("yyyy/MM/dd HH:mm")</small>
                                    <p>
                                        @if (!string.IsNullOrEmpty(reply.ImagePath))
                                        {
                                            <a href="@reply.ImagePath" target="_blank">
                                                <img src="@reply.ImagePath" class="post-image" />
                                            </a>
                                        }
                                    </p>
                                    <p class="mb-0 content">@reply.Content</p>
                                </div>
                            }
                        </div>
                    }

                    <div class="d-flex align-items-center">
                        <span style="display:none;" id="user-id-@post.Id" data-user-id="@loginUserId"></span>

                        <button class="btn btn-link p-0" onclick="toggleLike(@post.Id)">
                            <i class="fas fa-heart @(post.IsLiked ? "text-danger" : "")" id="heart-icon-@post.Id"></i>
                        </button>
                        <span id="like-count-@post.Id" class="ms-2">@post.LikeCount</span>

                        @if (User.Identity?.IsAuthenticated == true && loginUserId == post.UserId.ToString())
                        {
                            <button type="button" class="btn btn-link p-0 ms-2 text-secondary" onclick="toggleEdit(@post.Id)">
                                <i class="fas fa-edit"></i>
                            </button>
                        }

                        <form asp-controller="RePost" asp-action="Create" method="post" class="ms-2">
                            <input type="hidden" name="originalPostId" value="@post.Id" />
                            <button type="submit" class="btn btn-link p-0 text-info">
                                <i class="fas fa-retweet"></i>
                            </button>
                        </form>

                        <button type="button" class="btn btn-link p-0 ms-2 text-primary" onclick="toggleReply(@post.Id)">
                            <i class="fas fa-reply"></i>
                        </button>

                        <!-- リプライフォーム -->
                        <div id="reply-form-@post.Id" style="display: none;" class="mt-2 border p-3 rounded bg-light">
                            <textarea id="reply-content-@post.Id" class="form-control mb-2" rows="3"></textarea>
                            <input type="file" id="reply-image-@post.Id" class="form-control mb-2" />
                            <button class="btn btn-sm btn-primary" onclick="submitReply(@post.Id)">返信</button>
                            <button class="btn btn-sm btn-secondary" onclick="toggleReply(@post.Id)">キャンセル</button>
                        </div>
                    </div>
                </div>

                <!-- 編集フォーム -->
                <div id="edit-@postId" style="display: none;">
                    <form onsubmit="event.preventDefault(); saveEdit(@postId)" enctype="multipart/form-data">
                        <textarea id="edit-content-@postId" class="form-control mb-2">@post.Content</textarea>
                        <input type="file" id="edit-image-@postId" class="form-control mb-2" />
                        <div class="form-check mb-2">
                            <input type="checkbox" class="form-check-input" id="delete-image-@postId" />
                            <label class="form-check-label" for="delete-image-@postId">画像を削除する</label>
                        </div>
                        <button type="submit" class="btn btn-primary btn-sm">保存</button>
                        <button type="button" class="btn btn-danger btn-sm" onclick="deletePost(@postId)">削除</button>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="toggleEdit(@postId)">キャンセル</button>
                    </form>
                </div>
            </div>
        }
    </div>
}
